{
    "query_1":[ "SELECT P.CONSECUTIVO AS PERSONA, CASE WHEN  H.ASIGNACIONES_FACTURADAS IS NULL THEN 0 ELSE H.ASIGNACIONES_FACTURADAS END AS ASIGNACIONES_FACTURADAS FROM PERSONAS P LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, COUNT(A.TARIFA_HORA) AS ASIGNACIONES_FACTURADAS FROM ASIGNACIONES A INNER JOIN ASIGNACIONES_HISTORICOS AH ON A.CONSECUTIVO = AH.CON_ASIG INNER JOIN PERSONAS P  ON P.CONSECUTIVO = A.CON_PERSONA WHERE AH.FECHA_FIN > ADD_MONTHS(P.FECHA_RETIRO, -14)  AND   AH.FECHA_FIN < ADD_MONTHS(P.FECHA_RETIRO, -2) AND   A.TARIFA_HORA > 0 GROUP BY P.CONSECUTIVO) H ON P.CONSECUTIVO = H.PERSONA WHERE P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  ORDER BY P.CONSECUTIVO", 
    ["ASIGNACIONES_FACTURADAS"], 
    ["no_function"]],

    "query_2": ["SELECT P.CONSECUTIVO AS PERSONA, CASE WHEN  H.ASIGNACIONES_NO_FACTURADAS IS NULL THEN 0 ELSE H.ASIGNACIONES_NO_FACTURADAS END AS ASIGNACIONES_NO_FACTURADAS FROM PERSONAS P LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, COUNT(A.TARIFA_HORA) AS ASIGNACIONES_NO_FACTURADAS FROM ASIGNACIONES A INNER JOIN ASIGNACIONES_HISTORICOS AH ON A.CONSECUTIVO = AH.CON_ASIG INNER JOIN PERSONAS P                 ON P.CONSECUTIVO = A.CON_PERSONA WHERE AH.FECHA_FIN > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   AH.FECHA_FIN < ADD_MONTHS(P.FECHA_RETIRO, -2) AND   A.TARIFA_HORA = 0 GROUP BY P.CONSECUTIVO) H ON P.CONSECUTIVO = H.PERSONA WHERE P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3  AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL' ORDER BY P.CONSECUTIVO", 
      ["ASIGNACIONES_NO_FACTURADAS"],
       ["no_function"]],

    "query_3": ["SELECT A.PERSONA, A.TIPO_SERVICIO, CASE WHEN B.CANTIDAD_TIPOS_SERVICIO IS NULL THEN 0 ELSE B.CANTIDAD_TIPOS_SERVICIO END FROM ( SELECT P.CONSECUTIVO AS PERSONA, C.RV_LOW_VALUE AS TIPO_SERVICIO FROM CG_REF_CODES C CROSS JOIN PERSONAS P WHERE C.RV_DOMAIN = 'TIPO_PROYECTO' AND   P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,C.RV_LOW_VALUE ) A LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, S.TIPO AS TIPO_SERVICIO, COUNT(S.TIPO) AS CANTIDAD_TIPOS_SERVICIO FROM ASIGNACIONES A INNER JOIN ASIGNACIONES_HISTORICOS AH ON A.CONSECUTIVO  = AH.CON_ASIG INNER JOIN PERSONAS P ON A.CON_PERSONA  = P.CONSECUTIVO INNER JOIN SERVICIOS S  ON A.COD_SERVICIO = S.CODIGO_SERVICIO WHERE AH.FECHA_FIN > ADD_MONTHS(P.FECHA_RETIRO,-14) AND   AH.FECHA_FIN < ADD_MONTHS(P.FECHA_RETIRO ,-2) AND   P.FECHA_RETIRO IS NOT NULL GROUP BY P.CONSECUTIVO, S.TIPO ) B ON A.PERSONA = B.PERSONA AND A.TIPO_SERVICIO = B.TIPO_SERVICIO ORDER BY A.PERSONA,A.TIPO_SERVICIO", 
      ["CANTIDAD_TIPOS_SERVICIO", "TIPO_SERVICIO"], 
      ["pivot_table", "suffix", "TP"]],

    "query_4": ["SELECT A.PERSONA, A.TIPO_SERVICIO, CASE WHEN B.HORAS_TIPO_SERVICIO IS NULL THEN 0 ELSE B.HORAS_TIPO_SERVICIO END FROM (SELECT P.CONSECUTIVO AS PERSONA, C.RV_LOW_VALUE AS TIPO_SERVICIO FROM CG_REF_CODES C CROSS JOIN PERSONAS P WHERE C.RV_DOMAIN = 'TIPO_PROYECTO' AND   P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,C.RV_LOW_VALUE ) A LEFT JOIN ( SELECT P.CONSECUTIVO          AS PERSONA, S.TIPO      AS TIPO_SERVICIO, SUM(EA.DURACION_HORAS) AS HORAS_TIPO_SERVICIO FROM EJECUCION_ACTIVIDADES EA INNER JOIN ENTREGABLES_SERVICIO ES ON EA.CON_ENTREGABLE_SERV = ES.CONSECUTIVO INNER JOIN SERVICIOS S             ON ES.COD_SERVICIO        = S.CODIGO_SERVICIO INNER JOIN PERSONAS  P             ON EA.CONSECUTIVO_PERSONA = P.CONSECUTIVO WHERE EA.HORA_FINALIZACION > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   EA.HORA_FINALIZACION < ADD_MONTHS(P.FECHA_RETIRO , -2) GROUP BY P.CONSECUTIVO, S.TIPO ) B ON A.PERSONA = B.PERSONA AND A.TIPO_SERVICIO = B.TIPO_SERVICIO ORDER BY A.PERSONA,A.TIPO_SERVICIO", 
      ["HORAS_TIPO_SERVICIO", "TIPO_SERVICIO"], 
      ["pivot_table", "suffix", "HR"]],

   "query_5": ["SELECT A.PERSONA, A.HERRAMIENTA, CASE WHEN B.VECES_HERRAMIENTA_ASIGNADA IS NULL THEN 0 ELSE B.VECES_HERRAMIENTA_ASIGNADA END FROM ( SELECT P.CONSECUTIVO AS PERSONA,H.NOMBRE AS HERRAMIENTA FROM HERRAMIENTAS H CROSS JOIN PERSONAS P WHERE P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,H.NOMBRE) A LEFT JOIN ( SELECT P.CONSECUTIVO  AS PERSONA,H.NOMBRE  AS HERRAMIENTA,COUNT(AH.CONSECUTIVO) AS VECES_HERRAMIENTA_ASIGNADA  FROM HERRAMIENTAS_UTILIZADAS HU INNER JOIN HERRAMIENTAS H             ON HU.CON_HERRAMIENTAS = H.CONSECUTIVO INNER JOIN SERVICIOS S   ON HU.COD_SERVICIO     = S.CODIGO_SERVICIO INNER JOIN ASIGNACIONES A             ON S.CODIGO_SERVICIO   = A.COD_SERVICIO INNER JOIN ASIGNACIONES_HISTORICOS AH ON A.CONSECUTIVO  = AH.CON_ASIG INNER JOIN PERSONAS P                 ON P.CONSECUTIVO       = A.CON_PERSONA WHERE AH.FECHA_FIN > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   AH.FECHA_FIN < ADD_MONTHS(P.FECHA_RETIRO, -2) AND   P.FECHA_RETIRO IS NOT NULL GROUP BY P.CONSECUTIVO, H.NOMBRE) B ON A.PERSONA = B.PERSONA AND  A.HERRAMIENTA = B.HERRAMIENTA ORDER BY A.PERSONA, A.HERRAMIENTA", 
         ["VECES_HERRAMIENTA_ASIGNADA", "HERRAMIENTA"], 
         ["pivot_table"]],

   "query_6": ["SELECT A.PERSONA, A.ETAPA, CASE WHEN B.HORAS_ETAPA IS NULL THEN 0 ELSE B.HORAS_ETAPA END FROM ( SELECT P.CONSECUTIVO AS PERSONA, E.CODIGO_ETAPA  AS ETAPA FROM ETAPAS  E CROSS JOIN PERSONAS P WHERE P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,E.CODIGO_ETAPA) A LEFT JOIN ( SELECT P.CONSECUTIVO          AS PERSONA, EA.CODIGO_ETAPA        AS ETAPA, SUM(EA.DURACION_HORAS) AS HORAS_ETAPA FROM EJECUCION_ACTIVIDADES EA INNER JOIN PERSONAS P ON EA.CONSECUTIVO_PERSONA = P.CONSECUTIVO WHERE EA.HORA_FINALIZACION > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   EA.HORA_FINALIZACION < ADD_MONTHS(P.FECHA_RETIRO, -2) GROUP BY P.CONSECUTIVO, EA.CODIGO_ETAPA ) B ON A.PERSONA = B.PERSONA AND A.ETAPA = B.ETAPA ORDER BY A.PERSONA, A.ETAPA", 
      ["HORAS_ETAPA", "ETAPA"],
      ["pivot_table", "fillna", "SIN_ETAPA"]],

   "query_7": ["SELECT B.PERSONA, B.AREA, CASE WHEN C.HORAS_AREA IS NULL THEN 0 ELSE C.HORAS_AREA END FROM (SELECT P.CONSECUTIVO AS PERSONA, A.CONSECUTIVO  AS AREA FROM AREAS  A CROSS JOIN PERSONAS P WHERE P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,A.CONSECUTIVO  ) B LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, S.CON_AREA  AS AREA, SUM(EA.DURACION_HORAS) AS HORAS_AREA FROM EJECUCION_ACTIVIDADES EA INNER JOIN ENTREGABLES_SERVICIO ES ON EA.CON_ENTREGABLE_SERV = ES.CONSECUTIVO INNER JOIN PERSONAS P              ON EA.CONSECUTIVO_PERSONA = P.CONSECUTIVO INNER JOIN SERVICIOS S             ON ES.COD_SERVICIO  = S.CODIGO_SERVICIO WHERE EA.HORA_FINALIZACION > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   EA.HORA_FINALIZACION < ADD_MONTHS(P.FECHA_RETIRO, -2) GROUP BY P.CONSECUTIVO, S.CON_AREA ) C ON B.PERSONA = C.PERSONA AND C.PERSONA =  B.AREA ORDER BY B.PERSONA, B.AREA", 
      ["HORAS_AREA", "AREA"], 
      ["pivot_table"]],

   "query_8": ["SELECT A.PERSONA, A.TIPO_SERVICIO, CASE WHEN B.CANTIDAD_PENDIENTES IS NULL THEN 0 ELSE B.CANTIDAD_PENDIENTES END FROM ( SELECT P.CONSECUTIVO AS PERSONA, C.RV_LOW_VALUE AS TIPO_SERVICIO FROM CG_REF_CODES C CROSS JOIN PERSONAS P WHERE C.RV_DOMAIN = 'TIPO_PROYECTO' AND   P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,C.RV_LOW_VALUE ) A LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, S.TIPO AS TIPO_SERVICIO, COUNT(PE.CODIGO_PENDIENTE) AS CANTIDAD_PENDIENTES FROM ASIGNACIONES_HISTORICOS AH INNER JOIN ASIGNACIONES A  ON A.CONSECUTIVO = AH.CON_ASIG INNER JOIN PERSONAS     P  ON A.CON_PERSONA = P.CONSECUTIVO INNER JOIN PENDIENTES   PE ON A.COD_SERVICIO = PE.CODIGO_SERVICIO INNER JOIN SERVICIOS    S  ON PE.CODIGO_SERVICIO = S.CODIGO_SERVICIO WHERE AH.FECHA_FIN > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   AH.FECHA_FIN < ADD_MONTHS(P.FECHA_RETIRO, -2) AND   PE.FECHA_DETECCION > ADD_MONTHS(P.FECHA_RETIRO, -14) AND   PE.FECHA_DETECCION < ADD_MONTHS(P.FECHA_RETIRO, -2) GROUP BY P.CONSECUTIVO, S.TIPO) B ON A.PERSONA = B.PERSONA AND A.TIPO_SERVICIO = B.TIPO_SERVICIO ORDER BY A.PERSONA,A.TIPO_SERVICIO", 
      ["CANTIDAD_PENDIENTES", "TIPO_SERVICIO"], 
      ["pivot_table", "suffix", "PN"]],

   "query_9": ["SELECT A.PERSONA, A.TIPO_SERVICIO, CASE WHEN B.CANTIDAD_RIESGOS IS NULL THEN 0 ELSE B.CANTIDAD_RIESGOS END FROM ( SELECT P.CONSECUTIVO AS PERSONA, C.RV_LOW_VALUE AS TIPO_SERVICIO FROM CG_REF_CODES C CROSS JOIN PERSONAS P WHERE C.RV_DOMAIN = 'TIPO_PROYECTO' AND   P.FECHA_RETIRO IS NOT NULL AND  MONTHS_BETWEEN (P.FECHA_RETIRO, P.FECHA_INGRESO) >= 3 AND  P.GERENCIA_RESPONSABLE  <> 'INTELIGENCIA ARTIFICIAL'  GROUP BY P.CONSECUTIVO,C.RV_LOW_VALUE ) A LEFT JOIN ( SELECT P.CONSECUTIVO AS PERSONA, S.TIPO AS TIPO_SERVICIO, COUNT(RS.CONSECUTIVO) AS CANTIDAD_RIESGOS FROM ASIGNACIONES_HISTORICOS AH INNER JOIN ASIGNACIONES A      ON A.CONSECUTIVO = AH.CON_ASIG INNER JOIN PERSONAS     P      ON A.CON_PERSONA = P.CONSECUTIVO INNER JOIN RIESGOS_SERVICIO RS ON A.COD_SERVICIO = RS.CODIGO_SERVICIO INNER JOIN SERVICIOS    S      ON RS.CODIGO_SERVICIO = S.CODIGO_SERVICIO WHERE AH.FECHA_FIN BETWEEN ADD_MONTHS(P.FECHA_RETIRO, -14) AND ADD_MONTHS(P.FECHA_RETIRO, -2)  AND   RS.FECHA_REGISTRO BETWEEN ADD_MONTHS(P.FECHA_RETIRO, -14)  AND ADD_MONTHS(P.FECHA_RETIRO, -2) GROUP BY P.CONSECUTIVO, S.TIPO ) B ON A.PERSONA = B.PERSONA AND A.TIPO_SERVICIO = B.TIPO_SERVICIO ORDER BY A.PERSONA, A.TIPO_SERVICIO", 
      ["CANTIDAD_RIESGOS", "TIPO_SERVICIO"], ["pivot_table", "suffix", "RS"]],
      
   "query_10": ["SELECT CONSECUTIVO AS PERSONA, FECHA_NACIMIENTO, FECHA_RETIRO FROM PERSONAS WHERE FECHA_RETIRO IS NOT NULL AND FECHA_NACIMIENTO IS NOT NULL", 
               ["EDAD", "FECHA_NACIMIENTO", "FECHA_RETIRO"], ["age", "apply", "drop"]],
      
   "query_11": ["SELECT CONSECUTIVO AS PERSONA, GENERO FROM PERSONAS WHERE FECHA_RETIRO IS NOT NULL AND FECHA_NACIMIENTO IS NOT NULL", ["GENERO"], ["replace"]],
      
   "query_12": ["SELECT CONSECUTIVO AS PERSONA, FECHA_INGRESO, FECHA_RETIRO FROM PERSONAS WHERE FECHA_RETIRO IS NOT NULL AND FECHA_INGRESO IS NOT NULL", 
               ["TIEMPO_EMP", "FECHA_INGRESO", "FECHA_RETIRO"], ["time", "apply", "drop"]]
      

   
     
   

   
   
 }
    
  